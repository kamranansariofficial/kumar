{"version":3,"sources":["components/theme.js","img/IMG-20211121-WA0005.jpg","img/IMG-20211121-WA0004.jpg","pages/Login.js","pages/Home.js","components/_dashboard/receivedInventory/TableDialog.js","components/_dashboard/receivedInventory/InventoryTable.js","components/_dashboard/receivedInventory/AddBox.js","components/_dashboard/receivedInventory/Filter.js","pages/ReceivedInventory.js","pages/NotFound.js","components/layout/index.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","contrastText","secondary","error","red","A400","Login","navigate","useNavigate","Box","sx","backgroundImage","BgImage","height","backgroundSize","backgroundRepeat","objectFit","width","display","alignItems","justifyContent","maxWidth","backgroundColor","borderTopLeftRadius","borderTopRightRadius","p","mx","src","Image","alt","style","TextField","type","varaint","placeholder","fullWidth","borderRadius","mt","my","to","Button","variant","color","fontWeight","textTransform","fontSize","boxShadow","onClick","Home","Typography","BootstrapDialog","styled","Dialog","padding","spacing","rows","lot","bundle","box","size","quantity","amount","dialogRow","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","m","position","right","top","TableDialog","React","useState","open","setOpen","handleClose","md","id","DialogContent","Table","TableHead","borderBottom","TableRow","border","TableCell","align","TableBody","map","v","component","scope","Math","random","bgcolor","defaultValue","IconButton","textAlign","px","row","InventoryTable","TableContainer","Paper","inventoryData","label","name","AddBox","Grid","container","item","lg","i","data","Filter","percent","total","Date","value","setValue","handleChange","newValue","mb","DesktopDatePicker","inputFormat","onChange","renderInput","params","FormControl","InputLabel","Select","labelId","MenuItem","elevation","span","toFixed","Inventory","NotFound","drawerWidth","listItems","href","Layout","window","mobileOpen","setMobileOpen","active","setActive","handleDrawerToggle","drawer","Toolbar","Divider","List","val","index","ListItem","button","ListItemText","undefined","document","body","CssBaseline","AppBar","sm","ml","edge","mr","noWrap","flexShrink","Drawer","ModalProps","keepMounted","xs","boxSizing","flexGrow","App","className","LocalizationProvider","dateAdapter","DateAdapter","ThemeProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5704719.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\nimport { red } from \"@mui/material/colors\";\n\n// Create a theme instance.\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#0DA1DA\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      main: \"#5b6266\",\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/IMG-20211121-WA0005.16cadc05.jpg\";","export default __webpack_public_path__ + \"static/media/IMG-20211121-WA0004.384871ac.jpg\";","import React from \"react\";\n\n// react router dom\nimport { Link, useNavigate } from \"react-router-dom\";\n\n// material\nimport { TextField, Button, Box } from \"@mui/material\";\n\n// images\nimport Image from \"../img/IMG-20211121-WA0005.jpg\";\nimport BgImage from \"../img/IMG-20211121-WA0004.jpg\";\n\nexport default function Login() {\n  const navigate = useNavigate();\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${BgImage})`,\n        height: \"100vh\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        objectFit: \"cover\",\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div>\n        <Box\n          sx={{\n            display: \"block\",\n            maxWidth: \"400px\",\n            backgroundColor: \"#EE1D23\",\n            borderTopLeftRadius: \"10px\",\n            borderTopRightRadius: \"15px\",\n            p: \"15px\",\n            mx: 1,\n          }}\n        >\n          <img src={Image} alt=\"Kumar\" style={{ width: \"150px\" }} />\n          <TextField\n            type=\"text\"\n            varaint=\"outlined\"\n            placeholder=\"Username\"\n            fullWidth\n            sx={{ backgroundColor: \"#ffff\", borderRadius: \"5px\", mt: 1 }}\n          />\n          <TextField\n            type=\"password\"\n            varaint=\"outlined\"\n            placeholder=\"Password\"\n            fullWidth\n            sx={{ backgroundColor: \"#ffff\", borderRadius: \"5px\", my: 1 }}\n          />\n          <Link to=\"#\">Forgot your password?</Link>\n        </Box>\n        <Box\n          sx={{\n            maxWidth: \"431px\",\n            mx: 1,\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            sx={{\n              color: \"#ffff\",\n              fontWeight: 600,\n              textTransform: \"capitalize\",\n              p: \"16px 8px\",\n              borderRadius: \"0 0 15px 15px\",\n              fontSize: \"24px\",\n              boxShadow: \"none\",\n            }}\n            onClick={() => navigate(\"/\")}\n          >\n            Log In\n          </Button>\n        </Box>\n      </div>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Typography variant=\"h5\" color=\"text.primary\">\n        Hello from Home\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    Table,\r\n    Box,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    IconButton,\r\n    TextField\r\n} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\nconst rows = [\r\n    {\r\n        lot: \"129902\",\r\n        bundle: 10,\r\n        box: 80,\r\n        size: \"36-46\",\r\n        quantity: 400,\r\n        amount: \"2,40,000 INR\"\r\n    },\r\n];\r\nconst dialogRow = [\r\n    {\r\n        lot: \"129902\",\r\n        bundle: 10,\r\n        box: 80,\r\n        size: \"36-46\",\r\n        quantity: 400,\r\n        amount: \"2,40,000 INR\",\r\n        type: \"number\"\r\n    },\r\n    {\r\n        lot: \"129902\",\r\n        bundle: 10,\r\n        box: 80,\r\n        size: \"36-46\",\r\n        quantity: 400,\r\n        amount: \"2,40,000 INR\",\r\n        type: \"text\"\r\n    },\r\n];\r\nconst BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <Button\r\n                    varaint=\"text\"\r\n                    color=\"secondary\"\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        textTransform: \"capitalize\"\r\n                    }}\r\n                >\r\n                    Close\r\n                    <CloseIcon />\r\n                </Button>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\nexport default function TableDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleClickOpen}>Add Details</Button>\r\n              <BootstrapDialog\r\n                sx={{ '& .MuiDialog-paper': { md: { maxWidth: 844, width: '100%' } } }}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n            >\r\n                <BootstrapDialogTitle id=\"customized-dialog-title\" sx={{ fontWeight: 600 }} onClose={handleClose}>\r\n                    Lot No. 129902\r\n                </BootstrapDialogTitle>\r\n                <DialogContent>\r\n                    <Table>\r\n                        <TableHead sx={{ borderBottom: \"none\" }}>\r\n                            <TableRow\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell sx={{ fontWeight: 600 }}>Lot No</TableCell>\r\n                                <TableCell sx={{ fontWeight: 600 }} >Bundles#</TableCell>\r\n                                <TableCell sx={{ fontWeight: 600 }}>Boxes</TableCell>\r\n                                <TableCell sx={{ fontWeight: 600 }} >Size</TableCell>\r\n                                <TableCell sx={{ fontWeight: 600 }} align=\"center\" >Quantity</TableCell>\r\n                                <TableCell sx={{ fontWeight: 600 }} align=\"right\">Total Amount</TableCell>\r\n                                <TableCell align=\"right\" ></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((v) => (\r\n                                <TableRow\r\n                                    key={Math.random()}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {v.lot}\r\n                                    </TableCell>\r\n                                    <TableCell >{v.bundle}</TableCell>\r\n                                    <TableCell >{v.box}</TableCell>\r\n                                    <TableCell >{v.size}</TableCell>\r\n                                    <TableCell align=\"center\" >{v.quantity}</TableCell>\r\n                                    <TableCell align=\"right\" >{v.amount}</TableCell>\r\n                                    <TableCell align=\"right\" ></TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    <Table>\r\n                        <TableHead sx={{ bgcolor: \"#5b6266\" }}>\r\n                            <TableRow >\r\n                                <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }}>Boxes</TableCell>\r\n                                <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} >Design code</TableCell>\r\n                                <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }}>Size</TableCell>\r\n                                <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} >Rate/Price</TableCell>\r\n                                <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} align=\"center\" >Quantity</TableCell>\r\n                                <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} align=\"right\">Amount(INR)</TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow\r\n                                key={Math.random()}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <TextField\r\n                                    size=\"small\"\r\n                                        defaultValue=\"129902\"\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    <TextField\r\n                                    size=\"small\"\r\n                                        defaultValue=\"10\"\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    <TextField\r\n                                    size=\"small\"\r\n                                        defaultValue=\"80\"\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    <TextField\r\n                                    size=\"small\"\r\n                                        defaultValue=\"30-46\"\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    <TextField\r\n                                    size=\"small\"\r\n                                        defaultValue=\"400\"\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    <TextField\r\n                                    size=\"small\"\r\n                                        defaultValue=\"240000 INR\"\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell sx={{ display: \"flex\", alignItems:\"center\" }}>\r\n                                    <IconButton size=\"large\"><SaveOutlinedIcon /></IconButton>\r\n                                    <IconButton size=\"large\"><CloseIcon /></IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {dialogRow.map((v) => (\r\n                                <TableRow\r\n                                    key={Math.random()}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {v.lot}\r\n                                    </TableCell>\r\n                                    <TableCell >{v.bundle}</TableCell>\r\n                                    <TableCell >{v.box}</TableCell>\r\n                                    <TableCell >{v.size}</TableCell>\r\n                                    <TableCell align=\"center\" >{v.quantity}</TableCell>\r\n                                    <TableCell align=\"right\" >{v.amount}</TableCell>\r\n                                    <TableCell align=\"center\" >\r\n                                        <IconButton>\r\n                                            <ModeEditOutlineOutlinedIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </DialogContent>\r\n                <Box my={2} sx={{ textAlign: \"center\" }}>\r\n                    <Button variant=\"text\" color=\"secondary\" sx={{ px: 5, mx: 1 }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" sx={{ px: 5 }}>\r\n                        Save\r\n                    </Button>\r\n                </Box>\r\n            </BootstrapDialog>\r\n        </>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper} from '@mui/material';\r\nimport TableDialog from \"./TableDialog\"\r\nconst row = [\r\n    {\r\n        lot: \"129902\",\r\n        bundle: 10,\r\n        box: 80,\r\n        size: \"36-46\",\r\n        quantity: 400,\r\n        amount: \"2,40,000 INR\"\r\n    },\r\n    {\r\n        lot: \"129902\",\r\n        bundle: 10,\r\n        box: 80,\r\n        size: \"36-46\",\r\n        quantity: 400,\r\n        amount: \"2,40,000 INR\"\r\n    },\r\n    {\r\n        lot: \"129902\",\r\n        bundle: 10,\r\n        box: 80,\r\n        size: \"36-46\",\r\n        quantity: 400,\r\n        amount: \"2,40,000 INR\"\r\n    },\r\n    {\r\n        lot: \"129902\",\r\n        bundle: 10,\r\n        box: 80,\r\n        size: \"36-46\",\r\n        quantity: 400,\r\n        amount: \"2,40,000 INR\"\r\n    },\r\n]\r\nexport default function InventoryTable() {\r\n    return (\r\n        <div>\r\n            <TableContainer sx={{ boxShadow: 'none' }} component={Paper}>\r\n                <Table>\r\n                    <TableHead sx={{ bgcolor: \"#5b6266\" }}>\r\n                        <TableRow >\r\n                            <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }}>Lot No</TableCell>\r\n                            <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} >Bundles#</TableCell>\r\n                            <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }}>Boxes</TableCell>\r\n                            <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} >Size</TableCell>\r\n                            <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} align=\"center\" >Quantity</TableCell>\r\n                            <TableCell sx={{ color: \"#ffff\", fontWeight: 600 }} align=\"right\">Total Amount</TableCell>\r\n                            <TableCell ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {row.map((v) => (\r\n                            <TableRow\r\n                                key={Math.random()}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {v.lot}\r\n                                </TableCell>\r\n                                <TableCell >{v.bundle}</TableCell>\r\n                                <TableCell >{v.box}</TableCell>\r\n                                <TableCell >{v.size}</TableCell>\r\n                                <TableCell align=\"center\" >{v.quantity}</TableCell>\r\n                                <TableCell align=\"right\" >{v.amount}</TableCell>\r\n                                <TableCell align=\"right\" >\r\n                                    <TableDialog/>\r\n                                    <Button variant=\"text\" color=\"error\" size=\"small\" sx={{ mx: 1 }}>delete</Button>\r\n                                </TableCell>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { TextField, Grid, Box, Paper, Button } from \"@mui/material/\";\r\nimport InventoryTable from \"./InventoryTable\";\r\n\r\nconst inventoryData = [\r\n  {\r\n    label: \"Lot No\",\r\n    name: \"lotNo\",\r\n    type: \"number\",\r\n  },\r\n  {\r\n    label: \"No. of Bundles\",\r\n    name: \"noOfBundles\",\r\n    type: \"number\",\r\n  },\r\n  {\r\n    label: \"Total Boxes\",\r\n    name: \"totalBoxes\",\r\n    type: \"number\",\r\n  },\r\n  {\r\n    label: \"Boxes\",\r\n    name: \"boxes\",\r\n    type: \"number\",\r\n  },\r\n  {\r\n    label: \"Quantity\",\r\n    name: \"Quantity\",\r\n    type: \"number\",\r\n  },\r\n  {\r\n    label: \"Amount\",\r\n    name: \"amount\",\r\n    type: \"number\",\r\n  },\r\n];\r\n\r\nexport default function AddBox() {\r\n  return (\r\n    <div>\r\n      <Box\r\n        component={Paper}\r\n        sx={{ bgcolor: \"#dce2e5\", m: \"0 -24px\", p: \"24px\" }}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={10}>\r\n            <Grid container spacing={2}>\r\n              {inventoryData.map((v, i) => (\r\n                <Grid item lg={2} key={v.name}>\r\n                  {v.type === \"number\" ? (\r\n                    <TextField\r\n                      label={v.label}\r\n                      id={v.name}\r\n                      // value={}\r\n                      // onChange={}\r\n                      type={v.type}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              fullWidth\r\n              color=\"secondary\"\r\n              sx={{ fontSize: \"16px\", height: 56 }}\r\n            >\r\n              Add entry\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box my={1}>\r\n        <InventoryTable />\r\n        <Box my={2} sx={{ textAlign: \"center\" }}>\r\n          <Button variant=\"text\" color=\"secondary\" sx={{ px: 5, mx: 1 }}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" sx={{ px: 5 }}>\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\n// mui\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Grid,\n  Box,\n  Paper,\n  Typography\n} from \"@mui/material/\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport AddBox from \"./AddBox\"\nconst data = [\n  {\n    label: \"Supplier Code\",\n    name: \"supplierCode\",\n    type: \"number\",\n  },\n  {\n    label: \"STI No.\",\n    name: \"stiNo\",\n    type: \"number\",\n  },\n  {\n    label: \"STI Date\",\n    name: \"stiDate\",\n    type: \"date\",\n  },\n  {\n    label: \"Received on\",\n    name: \"receivedOn\",\n    type: \"date\",\n  },\n  {\n    label: \"LR No.\",\n    name: \"lrNo.\",\n    type: \"number\",\n  },\n  {\n    label: \"Category\",\n    name: \"category\",\n    type: \"select\",\n  },\n  {\n    label: \"Total Quantity\",\n    name: \"totalQuantity\",\n    type: \"number\",\n  },\n  {\n    label: \"Shipped by\",\n    name: \"shippedBy\",\n    type: \"select\",\n  },\n  {\n    label: \"Received by\",\n    name: \"receivedBy\",\n    type: \"select\",\n  },\n];\n\nfunction percentage(percent, total) {\n  return ((percent / 100) * total).toFixed(2)\n}\nexport default function Filter() {\n  const [value, setValue] = React.useState(new Date(\"2014-08-18T21:11:54\"));\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <Box mb={4}>\n        <Grid container spacing={3} justifyContent=\"space-between\">\n          {data.map((v, i) => (\n            <Grid item lg={3} key={v.name}>\n              {v.type === \"number\" ? (\n                <TextField\n                  label={v.label}\n                  id={v.name}\n                  // value={}\n                  // onChange={}\n                  type={v.type}\n                  fullWidth\n                  variant=\"outlined\"\n                />\n              ) : v.type === \"date\" ? (\n                <DesktopDatePicker\n                  label={v.label}\n                  inputFormat=\"MM/dd/yyyy\"\n                  value={value}\n                  onChange={handleChange}\n                  renderInput={(params) => <TextField {...params} />}\n                />\n              ) : (\n                <FormControl fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">{v.label}</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    //   value={age}\n                    label={v.label}\n                  //   onChange={handleChange}\n                  >\n                    <MenuItem value={10}>Ten</MenuItem>\n                    <MenuItem value={20}>Twenty</MenuItem>\n                    <MenuItem value={30}>Thirty</MenuItem>\n                  </Select>\n                </FormControl>\n              )}\n            </Grid>\n          ))}\n          <Grid item lg={4}>\n\n            <Paper elevation={3} sx={{p:2}}>\n              <Typography variant=\"h6\" color=\"initial\" sx={{ display: \"block\", fontSize: \"1rem\", fontWeight: 600, textAlign: \"right\", span:{ fontWeight:500,} }} >Total:<span> 2,40,000</span> </Typography>\n              <Typography variant=\"h6\" color=\"initial\" sx={{ fontSize: \"1rem\", fontWeight: 600, textAlign: \"right\",span:{ fontWeight:500,}  }} >Freight:<span>9655,00</span></Typography>\n              <Typography variant=\"h6\" color=\"initial\" sx={{ fontSize: \"1rem\", fontWeight: 600, textAlign: \"right\",span:{ fontWeight:500,}  }}  >Taxable value: <span>433840,00</span></Typography>\n              <Typography variant=\"h6\" color=\"initial\" sx={{ fontSize: \"1rem\", fontWeight: 600, textAlign: \"right\",span:{ fontWeight:500,} , textTransform: \"uppercase\" }} >Sgst 2.50% : ----</Typography>\n              <Typography variant=\"h6\" color=\"initial\" sx={{ fontSize: \"1rem\", fontWeight: 600, textAlign: \"right\",span:{ fontWeight:500,} , textTransform: \"uppercase\" }} >Cgst 2.50% : ----</Typography>\n              <Typography variant=\"h6\" color=\"initial\" sx={{ fontSize: \"1rem\", fontWeight: 600, textAlign: \"right\",span:{ fontWeight:500,} , textTransform: \"uppercase\" }} >Igst 5%:<span> 21692</span></Typography>\n              <Typography variant=\"h6\" color=\"initial\" sx={{ fontSize: \"1rem\", fontWeight: 600, textAlign: \"right\",span:{ fontWeight:500,}  }} >Grand total:<span>{45550000 - percentage(5, 45550000)} INR</span></Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n      <AddBox />\n    </div >\n  );\n}\n","import React from \"react\";\n\n// mui\nimport { Typography } from \"@mui/material\";\n\n// ________________\nimport Filter from \"../components/_dashboard/receivedInventory/Filter\";\n\nexport default function Inventory() {\n  return (\n    <div>\n      <Typography variant=\"h5\" color=\"text.primary\" mb={2}>\n        Received Inventory\n      </Typography>\n      <Filter />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Typography, Box } from \"@mui/material\";\n\nexport default function NotFound() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Typography variant=\"h3\" color=\"text.primary\">\n        Page not found!\n      </Typography>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Divider from \"@mui/material/Divider\";\nimport Drawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n\nconst drawerWidth = 240;\nconst listItems = [\n  {\n    name: \"Home\",\n    href: \"/\",\n  },\n  {\n    name: \"Received Inventory\",\n    href: \"/received-inventory\",\n  },\n  {\n    name: \"Distribute Inventory\",\n    href: \"/distribute-inventory\",\n  },\n  {\n    name: \"Inventory Management\",\n    href: \"/inventory-management\",\n  },\n];\n\nfunction Layout(props) {\n  const { window, children } = props;\n  const navigate = useNavigate();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [active, setActive] = React.useState(\"/\");\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <Toolbar />\n      <Divider />\n      <List>\n        {listItems.map((val, index) => (\n          <ListItem\n            button\n            onClick={() => {\n              setActive(val.href);\n              navigate(val.href);\n            }}\n            sx={{\n              bgcolor: active === val.href ? \"error.main\" : \"\",\n              color: active === val.href ? \"#fff\" : \"\",\n              \"&:hover\": {\n                bgcolor: \"error.main\",\n                color: \"#fff\",\n              },\n            }}\n            button\n            key={val.name}\n          >\n            {/* <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon> */}\n            <ListItemText primary={val.name} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        color=\"error\"\n        sx={{\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n          ml: { sm: `${drawerWidth}px` },\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: \"none\" } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            sx={{ fontWeight: 600 }}\n            noWrap\n            component=\"div\"\n          >\n            Kumar Shirts & Trousers\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box\n        component=\"nav\"\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n        aria-label=\"mailbox folders\"\n      >\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: \"block\", sm: \"none\" },\n            \"& .MuiDrawer-paper\": {\n              boxSizing: \"border-box\",\n              width: drawerWidth,\n            },\n          }}\n        >\n          {drawer}\n        </Drawer>\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            display: { xs: \"none\", sm: \"block\" },\n            \"& .MuiDrawer-paper\": {\n              boxSizing: \"border-box\",\n              width: drawerWidth,\n            },\n          }}\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Box>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n        }}\n      >\n        <Toolbar />\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\nLayout.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default Layout;\n","import \"./App.css\";\n\n//  react router dom\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// date fns\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\n\n// mui\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\n\n// mui theme\nimport { ThemeProvider } from \"@mui/material\";\nimport theme from \"./components/theme\";\n\n// ___________________________\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport ReceivedInventory from \"./pages/ReceivedInventory\";\nimport PageNotFound from \"./pages/NotFound\";\nimport Layout from \"./components/layout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <ThemeProvider theme={theme}>\n          <BrowserRouter>\n            <Routes>\n              <Route index path=\"/login\" element={<Login />} />\n              <Route\n                path=\"\"\n                element={\n                  <Layout>\n                    <Home />\n                  </Layout>\n                }\n              />\n              <Route\n                path=\"received-inventory\"\n                element={\n                  <Layout>\n                    <ReceivedInventory />\n                  </Layout>\n                }\n              />\n              <Route path=\"*\" element={<PageNotFound />} />\n            </Routes>\n          </BrowserRouter>\n        </ThemeProvider>\n      </LocalizationProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}